<Window
    x:Class="WPFControls.MessageBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Name="thisWindow"
    AllowsTransparency="True"
    Background="Transparent"
    RenderTransformOrigin="0.5,0.5"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None">

    <Window.RenderTransform>
        <ScaleTransform x:Name="Scale" />
    </Window.RenderTransform>

    <Window.Resources>

        <!--  Brushes  -->
        <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <!--
                <GradientStop Offset="0" Color="#E4E9F0"/>
                <GradientStop Offset="1" Color="#D5DDED"/>
            -->
            <GradientStop Offset="1" Color="Black" />
            <GradientStop Offset="0" Color="White" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="MsgBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1.0">
            <GradientStop Offset="1" Color="#1369a2" />
            <GradientStop Offset="0.65" Color="#0e6ba7" />
            <GradientStop Offset="0.4" Color="#117bba" />
            <GradientStop Offset="0.25" Color="#1686c7" />
            <GradientStop Offset="0" Color="#1c95d9" />
        </LinearGradientBrush>

        <!--<LinearGradientBrush x:Key="MsgBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF26006F" Offset="0.8" />
            <GradientStop Color="#FF2F0F60" Offset="0.5" />
            <GradientStop Color="#EE3B1379" Offset="0.3" />
            <GradientStop Color="#DE3023BE" Offset="0.1" />
            <GradientStop Color="#FF2A89E8" Offset="0" />
        </LinearGradientBrush>-->
        <!--  Styles  -->
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="Image">
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Margin" Value="3" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="130" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <!--  Animation  -->
        <Storyboard x:Key="LoadAnimation">
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                From="0.6"
                To="1.1"
                Duration="00:00:00.15" />
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                From="0.6"
                To="1.1"
                Duration="00:00:00.15" />
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="thisWindow"
                Storyboard.TargetProperty="(Window.Opacity)"
                From="0"
                To="1"
                Duration="00:00:00.15" />
            <DoubleAnimation
                BeginTime="00:00:00.15"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                From="1.1"
                To="1"
                Duration="00:00:00.1" />
            <DoubleAnimation
                BeginTime="00:00:00.15"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                From="1.1"
                To="1"
                Duration="00:00:00.1" />
        </Storyboard>
        <Storyboard x:Key="UnloadAnimation">
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                From="1"
                To="0.6"
                Duration="00:00:00.2" />
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="Scale"
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                From="1"
                To="0.6"
                Duration="00:00:00.2" />
            <DoubleAnimation
                AccelerationRatio="0.4"
                Storyboard.TargetName="thisWindow"
                Storyboard.TargetProperty="(Window.Opacity)"
                From="1"
                To="0"
                Duration="00:00:00.2" />
        </Storyboard>
    </Window.Resources>

    <!--
        这里解释了设置 Margin="5" 的原因
        Border with Margin = 5 to allow the animation to grow beyond the window's original size.
        If this was omitted the window would just get cropped when it reached it's original size and try to grow
    -->

    <Border
        Margin="5"
        Background="#117bba"
        BorderBrush="#117bba"
        BorderThickness="1"
        CornerRadius="8">

        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*"
                    MinHeight="60" />
                <RowDefinition Height="3" />
                <RowDefinition
                    Height="Auto"
                    MinHeight="40" />
            </Grid.RowDefinitions>

            <Border
                x:Name="gridMain"
                MinWidth="250"
                MinHeight="60"
                Background="{StaticResource MsgBackgroundBrush}"
                CornerRadius="8,8,0,0">
                <DockPanel
                    Margin="10,0"
                    LastChildFill="True">
                    <Image
                        x:Name="ImagePlaceholder"
                        Margin="0,0,5,0"
                        DockPanel.Dock="Left" />
                    <!--  The label contains a text block to enable text wrapping  -->
                    <Label
                        x:Name="MessageLabel"
                        DockPanel.Dock="Right">
                        <TextBlock
                            x:Name="MessageText"
                            TextWrapping="Wrap" />
                    </Label>
                </DockPanel>
            </Border>


            <TextBlock
                x:Name="gridSplitter0"
                Grid.Row="1"
                Height="3"
                Margin="0,0,0,0"
                HorizontalAlignment="Stretch"
                Background="LemonChiffon"
                FontSize="40"
                Text="..." />
            <GridSplitter
                x:Name="gridSplitter1"
                Grid.Row="1"
                Height="3"
                HorizontalAlignment="Stretch"
                Background="Transparent" />


            <Border
                x:Name="gridDetail"
                Grid.Row="2"
                Background="White"
                CornerRadius="0,0,8,8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  用于计算左边需要为详情Expander预留多少位置使用  -->
                    <TextBlock
                        x:Name="zhanweifu"
                        HorizontalAlignment="Left"
                        Background="Yellow"
                        Text="占占占"
                        Visibility="Hidden" />

                    <Expander
                        x:Name="DetailsExpander"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        MinHeight="30"
                        Padding="5,7,5,7"
                        Header="详情"
                        IsExpanded="True">

                        <TextBox
                            x:Name="DetailsText"
                            MaxHeight="800"
                            IsReadOnly="True"
                            IsReadOnlyCaretVisible="True"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            TextWrapping="Wrap" />

                    </Expander>

                    <StackPanel
                        x:Name="ButtonsPanel"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal" />

                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
